[{"/Users/mt_gueren_s/Desktop/reviewz/frontend/src/index.js":"1","/Users/mt_gueren_s/Desktop/reviewz/frontend/src/App.js":"2","/Users/mt_gueren_s/Desktop/reviewz/frontend/src/reportWebVitals.js":"3","/Users/mt_gueren_s/Desktop/reviewz/frontend/src/pages/Bullshit.js":"4","/Users/mt_gueren_s/Desktop/reviewz/frontend/src/pages/Home.js":"5","/Users/mt_gueren_s/Desktop/reviewz/frontend/src/pages/Analyzer.js":"6"},{"size":535,"mtime":1668815872528,"results":"7","hashOfConfig":"8"},{"size":513,"mtime":1668815872527,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1668815872529,"results":"10","hashOfConfig":"8"},{"size":2973,"mtime":1669418098244,"results":"11","hashOfConfig":"8"},{"size":2051,"mtime":1669140402807,"results":"12","hashOfConfig":"8"},{"size":6414,"mtime":1669426138705,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"v32pvo",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"/Users/mt_gueren_s/Desktop/reviewz/frontend/src/index.js",[],[],[],"/Users/mt_gueren_s/Desktop/reviewz/frontend/src/App.js",[],[],"/Users/mt_gueren_s/Desktop/reviewz/frontend/src/reportWebVitals.js",[],[],"/Users/mt_gueren_s/Desktop/reviewz/frontend/src/pages/Bullshit.js",["36","37","38"],[],"import React, { useEffect, useState } from 'react';\n\nfunction GraphOptions() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(!open);\n    (document.getElementById('dropdown').getAttribute('class') == \"iconify-dropdown\") ? \n    (document.getElementById('dropdown').setAttribute('class', \"iconify-dropdown-180\")) :\n    (document.getElementById('dropdown').setAttribute('class', \"iconify-dropdown\"));\n  };\n  \n  return (\n    <div class=\"App-analyzer\">\n      <div class=\"App-sidebar\">\n        <GraphOptionsDropdown\n          open={open}\n          trigger={ <button onClick={handleOpen}>\n                      <span id=\"dropdown\" class=\"iconify-dropdown\" />\n                    </button>}\n          menu={[\n            (<label class=\"graph-choices\">\n              <p>Histogram</p>\n              <input type=\"radio\" name=\"Graphs\" id=\"HIST\" value=\"analyzed_histogram.svg\" /* onChange={handleChange} */ />\n              <svg class=\"unchecked\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24px\" height=\"24px\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 24 24\">\n                  <path fill=\"white\" d=\"M19 3H5c-1.11 0-2 .89-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2m0 2v14H5V5h14Z\"/>\n              </svg>\n              <svg class=\"checked\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24px\" height=\"24px\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 32 32\">\n                  <path fill=\"white\" d=\"M26 4H6a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2ZM14 21.5l-5-4.957L10.59 15L14 18.346L21.409 11L23 12.577Z\"/>\n                  <path fill=\"none\" d=\"m14 21.5l-5-4.957L10.59 15L14 18.346L21.409 11L23 12.577Z\"/>\n              </svg>\n            </label>),\n            (<label class=\"graph-choices\">\n              <p>Heat Map</p>\n              <input type=\"radio\" name=\"Graphs\" id=\"HM\" value=\"analyzed_heatmap.svg\" /*onChange={handleChange} */ />\n              <svg class=\"unchecked\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24px\" height=\"24px\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 24 24\">\n                  <path fill=\"white\" d=\"M19 3H5c-1.11 0-2 .89-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2m0 2v14H5V5h14Z\"/>\n              </svg>\n              <svg class=\"checked\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24px\" height=\"24px\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 32 32\">\n                  <path fill=\"white\" d=\"M26 4H6a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2ZM14 21.5l-5-4.957L10.59 15L14 18.346L21.409 11L23 12.577Z\"/>\n                  <path fill=\"none\" d=\"m14 21.5l-5-4.957L10.59 15L14 18.346L21.409 11L23 12.577Z\"/>\n              </svg>\n            </label>),\n          ]}\n        />\n      </div>\n    </div>\n  );\n}\n\nfunction GraphOptionsDropdown({open, trigger, menu}) {\n  return (\n    <div class=\"graph-options\">\n      <h1>Graph Options {trigger} </h1>\n      {open ? (<> {menu} </>) : null}\n    </div>\n  );\n}\n\nexport default GraphOptions","/Users/mt_gueren_s/Desktop/reviewz/frontend/src/pages/Home.js",["39"],[],"import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\n\nfunction Body()\n{\n    const navigate = useNavigate();\n    // const inputRef = useRef(null);\n    const [content, setContent] = useState(\"\")\n\n    const handleClick = event => {\n        // const url = (inputRef.current.value);\n\n        const urlpath = String(content);\n\n        axios(\"http://127.0.0.1:5000/remove\").catch(error => {\n            console.error(\"Error removing: \", error);\n        })\n\n        const response = fetch(\"http://127.0.0.1:5000/url\", {\n          method: \"POST\",\n          headers: {\"Content-Type\": \"application/json\"},\n          body: JSON.stringify({url: urlpath}), //http request ?url=urlpath\n        });\n    \n        alert(urlpath);\n\n        navigate('/analyzer')\n    };\n\n\n    \n    return (\n        <header class=\"App-home\">\n            <h1>ReviewZ</h1>\n            <p>\n                Get real time feedback on how your product is doing.\n            </p>\n            <form>\n                <label>\n                        Paste your Amazon url below:\n                </label>\n                <div>\n                    <input \n                        type=\"text\" \n                        id=\"url_submit\" \n                        // ref={inputRef}\n                        value = {content}\n                        onChange = {e => setContent(e.target.value)} \n                        placeHolder = \"Ex. https://www.amazon.com/Remote-Control-Dancing-Imitates-Animals/dp/B0B6GJ7847/ref=puwl_atf_sccl_1/131-6402069-2006342?pd_rd_w=6XAAv&content-id=amzn1.sym.b8d6fc5b-13fe-440c-8384-29c241919e84&pf_rd_p=b8d6fc5b-13fe-440c-8384-29c241919e84&pf_rd_r=R1HV2HZZKCWCSDP7YDAM&pd_rd_wg=DEZoo&pd_rd_r=c63334db-32ed-4f7e-9a4c-705d0c5c66e6&pd_rd_i=B0B6GJ7847&th=1\"\n                    />\n                    <button onClick={handleClick}><span class=\"iconify-magnify\" /></button>\n                </div>\n            </form> \n        </header>\n    );\n}\n\nexport default function Home()\n{\n    return(\n        <Body />\n    );\n};","/Users/mt_gueren_s/Desktop/reviewz/frontend/src/pages/Analyzer.js",["40","41"],[],"import React, { useState } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction HomeButton() {\n    const navigate = useNavigate();\n    return(\n        <button onClick={ () => navigate('/')}>\n            <span class=\"iconify-home\" />\n        </button>\n    )\n}\n\nfunction Location() {\n    const [location, setLocation] = useState('');\n    let locations = [];\n    locations.push(<option value={''}>{''}</option>)\n    locations.push(<option value={'the united states'}>{'the united states'}</option>)\n    locations.push(<option value={'canada'}>{'canada'}</option>)\n    locations.push(<option value={'australia'}>{'australia'}</option>)\n    locations.push(<option value={'india'}>{'india'}</option>)\n    \n    const handleChange = event => {\n        event.preventDefault()\n        setLocation(event.target.value)\n    };\n    \n    return(\n        <div>\n            <form>\n                <label>\n                    Location\n                    <select value={location} onChange={handleChange}>\n                        { locations }\n                    </select>\n                </label>\n            </form>\n        </div>\n    );\n}\n\nfunction Month() {\n    const [month, setMonth] = useState('');\n    let months = [];\n    months.push(<option value={''}>{''}</option>)\n    months.push(<option value={'1'}>{'January'}</option>)\n    months.push(<option value={'2'}>{'February'}</option>)\n    months.push(<option value={'3'}>{'March'}</option>)\n    months.push(<option value={'4'}>{'April'}</option>)\n    months.push(<option value={'5'}>{'May'}</option>)\n    months.push(<option value={'6'}>{'June'}</option>)\n    months.push(<option value={'7'}>{'July'}</option>)\n    months.push(<option value={'8'}>{'August'}</option>)\n    months.push(<option value={'9'}>{'September'}</option>)\n    months.push(<option value={'10'}>{'October'}</option>)\n    months.push(<option value={'11'}>{'November'}</option>)\n    months.push(<option value={'12'}>{'December'}</option>)\n\n    \n    const handleChange = event => {\n        setMonth(event.target.value);\n        \n    };\n    return(\n        <div>\n            <form>\n                <label>\n                    Month of Review\n                    <select value={month} onChange={handleChange}>\n                        { months }\n                    </select>\n                </label>\n            </form>\n        </div>\n    );\n}\n\n\n\n\nfunction Filters() {\n    return(\n        <div class=\"filters\">\n            <h1>Filters</h1>\n            <Location />\n            <Month />\n        </div>\n    );\n}\n\nfunction TopBar() {\n    return(\n        <div class=\"App-topbar\">\n            <HomeButton />\n            <h1>ReviewZ</h1>\n        </div>\n    );\n}\n\nlet filename = \"\";\n\nfunction GraphOptions() {\n    const [open, setOpen] = React.useState(true);\n  \n    const handleChange = event => {\n        filename = 'http://127.0.0.1:5000/image/' + event.target.value;\n    };\n\n    const handleOpen = () => {\n      setOpen(!open);\n      (document.getElementById('dropdown').getAttribute('class') == \"iconify-dropdown\") ? \n      (document.getElementById('dropdown').setAttribute('class', \"iconify-dropdown-180\")) :\n      (document.getElementById('dropdown').setAttribute('class', \"iconify-dropdown\"));\n    };\n    \n    return (\n      <>\n        <GraphOptionsDropdown\n        open={open}\n        trigger={ <button onClick={handleOpen}>\n                    <span id=\"dropdown\" class=\"iconify-dropdown-180\" />\n                    </button>}\n        menu={[\n            (<label class=\"graph-choices\">\n            <p>Histogram</p>\n            <input type=\"radio\" name=\"Graphs\" id=\"HIST\" value=\"analyzed_histogram.svg\" onChange={handleChange} />\n            <svg class=\"unchecked\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24px\" height=\"24px\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 24 24\">\n                <path fill=\"white\" d=\"M19 3H5c-1.11 0-2 .89-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2m0 2v14H5V5h14Z\"/>\n            </svg>\n            <svg class=\"checked\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24px\" height=\"24px\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 32 32\">\n                <path fill=\"white\" d=\"M26 4H6a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2ZM14 21.5l-5-4.957L10.59 15L14 18.346L21.409 11L23 12.577Z\"/>\n                <path fill=\"none\" d=\"m14 21.5l-5-4.957L10.59 15L14 18.346L21.409 11L23 12.577Z\"/>\n            </svg>\n            </label>),\n            (<label class=\"graph-choices\">\n            <p>Heat Map</p>\n            <input type=\"radio\" name=\"Graphs\" id=\"HM\" value=\"analyzed_heatmap.svg\" onChange={handleChange} />\n            <svg class=\"unchecked\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24px\" height=\"24px\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 24 24\">\n                <path fill=\"white\" d=\"M19 3H5c-1.11 0-2 .89-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2m0 2v14H5V5h14Z\"/>\n            </svg>\n            <svg class=\"checked\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24px\" height=\"24px\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 32 32\">\n                <path fill=\"white\" d=\"M26 4H6a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2ZM14 21.5l-5-4.957L10.59 15L14 18.346L21.409 11L23 12.577Z\"/>\n                <path fill=\"none\" d=\"m14 21.5l-5-4.957L10.59 15L14 18.346L21.409 11L23 12.577Z\"/>\n            </svg>\n            </label>),\n        ]}\n        />\n      </>\n    );\n  }\n  \n  function GraphOptionsDropdown({open, trigger, menu}) {\n    return (\n      <div class=\"graph-options\">\n        <h1>Graph Options {trigger} </h1>\n        {open ? (<> {menu} </>) : null}\n      </div>\n    );\n  }\n\nexport default function Analyzer() {\n\n    const onClick = event => {\n        fetch(filename) ///* + SVG */)\n          .then(function(data){\n          return data.blob();\n        })\n        .then(blob => {\n          var img = URL.createObjectURL(blob);\n          document.getElementById('graph').setAttribute('src', img);\n        })\n    };\n\n    return (\n        <header class=\"App-analyzer\">\n            <TopBar />\n            <div class=\"App-sidebar\">\n                <GraphOptions />\n                <Filters />\n                <button class=\"btn-apply\" onClick={onClick} >Apply</button>\n            </div>\n            <div class=\"App-main\">\n                <img src=\"\" id=\"graph\" alt=\"\" width=\"500px\"></img>\n            </div>\n        </header> \n    );\n}",{"ruleId":"42","severity":1,"message":"43","line":1,"column":17,"nodeType":"44","messageId":"45","endLine":1,"endColumn":26},{"ruleId":"42","severity":1,"message":"46","line":1,"column":28,"nodeType":"44","messageId":"45","endLine":1,"endColumn":36},{"ruleId":"47","severity":1,"message":"48","line":8,"column":64,"nodeType":"49","messageId":"50","endLine":8,"endColumn":66},{"ruleId":"42","severity":1,"message":"51","line":21,"column":15,"nodeType":"44","messageId":"45","endLine":21,"endColumn":23},{"ruleId":"42","severity":1,"message":"52","line":3,"column":8,"nodeType":"44","messageId":"45","endLine":3,"endColumn":13},{"ruleId":"47","severity":1,"message":"48","line":111,"column":66,"nodeType":"49","messageId":"50","endLine":111,"endColumn":68},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'response' is assigned a value but never used.","'axios' is defined but never used."]
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gueren sanford\\\\Desktop\\\\reviewz\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { SetUrl } from '../ScrapingAndAnalysis';\n\n/*\r\n    HOME\r\n    Description: User must insert a valid link. If they do, then it sends request to flask to start creating all the necessary files\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const navigate = useNavigate();\n  const [content, setContent] = useState(\"\");\n  const handleClick = event => {\n    const urlpath = String(content);\n\n    // Request from flask to remove the old files\n    axios(\"/remove\").catch(error => {\n      console.error(\"Error removing: \", error);\n    });\n\n    // placed here to discourage user from spamming the submit button as that would crash the program\n    navigate('/analyzer');\n\n    // Sends the request to flask to start creating the files and if an error occurs it is displayed then brings the user back to the home screen\n    SetUrl(urlpath);\n    document.getScp;\n\n    // fetch(\"/url\", {\n    //   method: \"POST\",\n    //   headers: {\"Content-Type\": \"application/json\"},\n    //   body: JSON.stringify({url: urlpath}), //http request ?url=urlpath\n    // }).then(response =>  response.json()).then(data => {\n    //     if(data[\"message\"] !== \"Collecting data from the US sites.\")\n    //     {\n    //         alert(data[\"message\"])\n    //         navigate('/')\n    //     }\n    //     else\n    //     {\n    //         document.getElementById(\"image-prep\").innerText = data[\"message\"]\n    //         fetch(\"/number-of-reviews\").then(response => response.json()).then(data =>\n    //         {\n    //             if(data[\"message\"] === \"Failed to collect the total number of reviews. Please try again.\")\n    //             {\n    //                 document.getElementById(\"image-prep\").innerText = data[\"message\"]\n    //             }\n    //             else\n    //             {\n    //                 const maxPage = Math.ceil(data[\"message\"]/10.0)\n    //                 alert(maxPage)\n    //                 for(let page = 1; page <= maxPage + 1; page++)\n    //                 {\n    //                     fetch(\"/scraper\", {\n    //                         method: \"POST\",\n    //                         headers: {\"Content-Type\": \"application/json\"},\n    //                         body: JSON.stringify({\"page\": page}), //http request ?page=(int)page\n    //                     }).then(response => response.json()).then(data => {\n    //                         if(page <= maxPage)\n    //                         {\n    //                             document.getElementById(\"image-prep\").innerText = \"Collecting the reviews, we are about \" + ((page * 100) / maxPage).toFixed(0) + \"% done.\"\n    //                         }\n    //                         else\n    //                         {\n    //                             fetch(\"/tutorial-csv\").then(response => response.json()).then(data =>\n    //                             {\n    //                                 document.getElementById(\"image-prep\").innerText = data[\"message\"]\n    //                                 fetch(\"/analyzed-csv\").then(response => response.json()).then(data =>\n    //                                 {\n    //                                     document.getElementById(\"image-prep\").innerText = data[\"message\"]\n    //                                 })\n    //                             })\n    //                         }\n    //                     })\n    //                 }\n    //             }\n    //         })\n    //     }\n    // });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    class: \"App-home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ReviewZ\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Get real time feedback on how your product is doing.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Paste your Amazon url below:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"url_submit\",\n        value: content,\n        onChange: event => setContent(event.target.value),\n        placeHolder: \"Ex. https://www.amazon.com/Remote-Control-Dancing-Imitates-Animals/dp/B0B6GJ7847/ref=puwl_atf_sccl_1/131-6402069-2006342?pd_rd_w=6XAAv&content-id=amzn1.sym.b8d6fc5b-13fe-440c-8384-29c241919e84&pf_rd_p=b8d6fc5b-13fe-440c-8384-29c241919e84&pf_rd_r=R1HV2HZZKCWCSDP7YDAM&pd_rd_wg=DEZoo&pd_rd_r=c63334db-32ed-4f7e-9a4c-705d0c5c66e6&pd_rd_i=B0B6GJ7847&th=1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"search-btn\",\n        onClick: handleClick,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"iconify-magnify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 63\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"OlMIblTLOGV9uKy1tQNmlvloUrM=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useNavigate","axios","SetUrl","Home","navigate","content","setContent","handleClick","event","urlpath","String","catch","error","console","document","getScp","target","value"],"sources":["C:/Users/gueren sanford/Desktop/reviewz/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { SetUrl } from '../ScrapingAndAnalysis'\r\n\r\n/*\r\n    HOME\r\n    Description: User must insert a valid link. If they do, then it sends request to flask to start creating all the necessary files\r\n*/\r\n\r\nexport default function Home() {\r\n    const navigate = useNavigate();\r\n    const [content, setContent] = useState(\"\")\r\n\r\n    const handleClick = event => {\r\n\r\n        const urlpath = String(content);\r\n\r\n        // Request from flask to remove the old files\r\n        axios(\"/remove\").catch(error => {\r\n            console.error(\"Error removing: \", error);\r\n        })\r\n\r\n        // placed here to discourage user from spamming the submit button as that would crash the program\r\n        navigate('/analyzer')\r\n\r\n        // Sends the request to flask to start creating the files and if an error occurs it is displayed then brings the user back to the home screen\r\n        SetUrl(urlpath)\r\n        document.getScp\r\n\r\n        // fetch(\"/url\", {\r\n        //   method: \"POST\",\r\n        //   headers: {\"Content-Type\": \"application/json\"},\r\n        //   body: JSON.stringify({url: urlpath}), //http request ?url=urlpath\r\n        // }).then(response =>  response.json()).then(data => {\r\n        //     if(data[\"message\"] !== \"Collecting data from the US sites.\")\r\n        //     {\r\n        //         alert(data[\"message\"])\r\n        //         navigate('/')\r\n        //     }\r\n        //     else\r\n        //     {\r\n        //         document.getElementById(\"image-prep\").innerText = data[\"message\"]\r\n        //         fetch(\"/number-of-reviews\").then(response => response.json()).then(data =>\r\n        //         {\r\n        //             if(data[\"message\"] === \"Failed to collect the total number of reviews. Please try again.\")\r\n        //             {\r\n        //                 document.getElementById(\"image-prep\").innerText = data[\"message\"]\r\n        //             }\r\n        //             else\r\n        //             {\r\n        //                 const maxPage = Math.ceil(data[\"message\"]/10.0)\r\n        //                 alert(maxPage)\r\n        //                 for(let page = 1; page <= maxPage + 1; page++)\r\n        //                 {\r\n        //                     fetch(\"/scraper\", {\r\n        //                         method: \"POST\",\r\n        //                         headers: {\"Content-Type\": \"application/json\"},\r\n        //                         body: JSON.stringify({\"page\": page}), //http request ?page=(int)page\r\n        //                     }).then(response => response.json()).then(data => {\r\n        //                         if(page <= maxPage)\r\n        //                         {\r\n        //                             document.getElementById(\"image-prep\").innerText = \"Collecting the reviews, we are about \" + ((page * 100) / maxPage).toFixed(0) + \"% done.\"\r\n        //                         }\r\n        //                         else\r\n        //                         {\r\n        //                             fetch(\"/tutorial-csv\").then(response => response.json()).then(data =>\r\n        //                             {\r\n        //                                 document.getElementById(\"image-prep\").innerText = data[\"message\"]\r\n        //                                 fetch(\"/analyzed-csv\").then(response => response.json()).then(data =>\r\n        //                                 {\r\n        //                                     document.getElementById(\"image-prep\").innerText = data[\"message\"]\r\n        //                                 })\r\n        //                             })\r\n        //                         }\r\n        //                     })\r\n        //                 }\r\n        //             }\r\n        //         })\r\n        //     }\r\n        // });\r\n    };\r\n    \r\n    return (\r\n        <header class=\"App-home\">\r\n            <h1>ReviewZ</h1>\r\n            <p>\r\n                Get real time feedback on how your product is doing.\r\n            </p>\r\n            <label>\r\n                    Paste your Amazon url below:\r\n            </label>\r\n            <div>\r\n                <input \r\n                    type=\"text\" \r\n                    id=\"url_submit\" \r\n                    value = {content}\r\n                    onChange = {event => setContent(event.target.value)} \r\n                    placeHolder = \"Ex. https://www.amazon.com/Remote-Control-Dancing-Imitates-Animals/dp/B0B6GJ7847/ref=puwl_atf_sccl_1/131-6402069-2006342?pd_rd_w=6XAAv&content-id=amzn1.sym.b8d6fc5b-13fe-440c-8384-29c241919e84&pf_rd_p=b8d6fc5b-13fe-440c-8384-29c241919e84&pf_rd_r=R1HV2HZZKCWCSDP7YDAM&pd_rd_wg=DEZoo&pd_rd_r=c63334db-32ed-4f7e-9a4c-705d0c5c66e6&pd_rd_i=B0B6GJ7847&th=1\"\r\n                />\r\n                <button id=\"search-btn\" onClick={handleClick}><span class=\"iconify-magnify\" /></button>\r\n            </div>\r\n        </header>\r\n    );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,wBAAwB;;AAE/C;AACA;AACA;AACA;AAHA;AAKA,eAAe,SAASC,IAAI,GAAG;EAAA;EAC3B,MAAMC,QAAQ,GAAGJ,WAAW,EAAE;EAC9B,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMQ,WAAW,GAAGC,KAAK,IAAI;IAEzB,MAAMC,OAAO,GAAGC,MAAM,CAACL,OAAO,CAAC;;IAE/B;IACAJ,KAAK,CAAC,SAAS,CAAC,CAACU,KAAK,CAACC,KAAK,IAAI;MAC5BC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IAC5C,CAAC,CAAC;;IAEF;IACAR,QAAQ,CAAC,WAAW,CAAC;;IAErB;IACAF,MAAM,CAACO,OAAO,CAAC;IACfK,QAAQ,CAACC,MAAM;;IAEf;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACJ,CAAC;;EAED,oBACI;IAAQ,KAAK,EAAC,UAAU;IAAA,wBACpB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB,eAChB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAEI,eACJ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAEQ,eACR;MAAA,wBACI;QACI,IAAI,EAAC,MAAM;QACX,EAAE,EAAC,YAAY;QACf,KAAK,EAAIV,OAAQ;QACjB,QAAQ,EAAIG,KAAK,IAAIF,UAAU,CAACE,KAAK,CAACQ,MAAM,CAACC,KAAK,CAAE;QACpD,WAAW,EAAG;MAAgW;QAAA;QAAA;QAAA;MAAA,QAChX,eACF;QAAQ,EAAE,EAAC,YAAY;QAAC,OAAO,EAAEV,WAAY;QAAA,uBAAC;UAAM,KAAK,EAAC;QAAiB;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACrF;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEjB;AAAC,GA9FuBJ,IAAI;EAAA,QACPH,WAAW;AAAA;AAAA,KADRG,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
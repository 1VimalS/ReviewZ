{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gueren sanford\\\\Desktop\\\\reviewz\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\n/*\r\n    HOME\r\n    Description: User must insert a valid link. If they do, then it sends request to flask to start creating all the necessary files\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const navigate = useNavigate();\n  const [content, setContent] = useState(\"\");\n  const handleClick = event => {\n    const urlpath = String(content);\n\n    // Request from flask to remove the old files\n    axios(\"/remove\").catch(error => {\n      console.error(\"Error removing: \", error);\n    });\n\n    // placed here to discourage user from spamming the submit button as that would crash the program\n    navigate('/analyzer');\n\n    // Sends the request to flask to start creating the files and if an error occurs it is displayed then brings the user back to the home screen\n    fetch(\"/url\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        url: urlpath\n      }) //http request ?url=urlpath\n    }).then(response => response.json()).then(data => {\n      if (data[\"message\"] !== \"Collecting data from the US sites.\") {\n        alert(data[\"message\"]);\n        navigate('/');\n      } else {\n        document.getElementById(\"image-prep\").innerText = data[\"message\"];\n        fetch(\"/number-of-reviews\").then(response => response.json()).then(data => {\n          if (data[\"message\"] === \"Failed to collect the total number of reviews. Please try again.\") {\n            document.getElementById(\"image-prep\").innerText = data[\"message\"];\n          } else {\n            const maxPage = Math.ceil(data[\"message\"] / 10.0);\n            alert(maxPage);\n            for (let page = 1; page <= 2 + 2; page++) {\n              if (page < 2) {\n                fetch(\"/scraper\", {\n                  method: \"POST\",\n                  headers: {\n                    \"Content-Type\": \"application/json\"\n                  },\n                  body: JSON.stringify({\n                    \"page\": page\n                  }) //http request ?page=(int)page\n                }).then(response => response.json()).then(data => {\n                  document.getElementById(\"image-prep\").innerText = \"Collecting the reviews, we are about \" + (page * 100 / maxPage).toFixed(0) + \"% done.\";\n                });\n              }\n            }\n            fetch(\"/tutorial-csv\").then(response => response.json()).then(data => {\n              document.getElementById(\"image-prep\").innerText = data[\"message\"];\n              fetch(\"/analyzed-csv\").then(response => response.json()).then(data => {\n                document.getElementById(\"image-prep\").innerText = data[\"message\"];\n              });\n            });\n          }\n        });\n        // fetch(\"/us-scraping\").then(response => response.json()).then(data =>\n        // {\n        // document.getElementById(\"image-prep\").innerText = data[\"message\"]\n        // fetch(\"/au-scraping\").then(response => response.json()).then(data =>\n        // {\n        //     document.getElementById(\"image-prep\").innerText = data[\"message\"]\n        //     fetch(\"/ca-scraping\").then(response => response.json()).then(data =>\n        //     {\n        //         document.getElementById(\"image-prep\").innerText = data[\"message\"]\n        //         fetch(\"/in-scraping\").then(response => response.json()).then(data =>\n        //         {\n        //             document.getElementById(\"image-prep\").innerText = data[\"message\"]\n        //             fetch(\"/uk-scraping\").then(response => response.json()).then(data =>\n        //             {\n        //                     document.getElementById(\"image-prep\").innerText = data[\"message\"]\n        //                     fetch(\"/tutorial-csv\").then(response => response.json()).then(data =>\n        //                     {\n        //                         document.getElementById(\"image-prep\").innerText = data[\"message\"]\n        //                         fetch(\"/analyzed-csv\").then(response => response.json()).then(data =>\n        //                         {\n        //                             document.getElementById(\"image-prep\").innerText = data[\"message\"]\n        //                         })\n        //                     })\n        //                 // })\n        //             // })\n        //         // })\n        //     // })\n        // })\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    class: \"App-home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ReviewZ\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Get real time feedback on how your product is doing.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Paste your Amazon url below:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"url_submit\",\n        value: content,\n        onChange: event => setContent(event.target.value),\n        placeHolder: \"Ex. https://www.amazon.com/Remote-Control-Dancing-Imitates-Animals/dp/B0B6GJ7847/ref=puwl_atf_sccl_1/131-6402069-2006342?pd_rd_w=6XAAv&content-id=amzn1.sym.b8d6fc5b-13fe-440c-8384-29c241919e84&pf_rd_p=b8d6fc5b-13fe-440c-8384-29c241919e84&pf_rd_r=R1HV2HZZKCWCSDP7YDAM&pd_rd_wg=DEZoo&pd_rd_r=c63334db-32ed-4f7e-9a4c-705d0c5c66e6&pd_rd_i=B0B6GJ7847&th=1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"search-btn\",\n        onClick: handleClick,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"iconify-magnify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 63\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"OlMIblTLOGV9uKy1tQNmlvloUrM=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useNavigate","axios","Home","navigate","content","setContent","handleClick","event","urlpath","String","catch","error","console","fetch","method","headers","body","JSON","stringify","url","then","response","json","data","alert","document","getElementById","innerText","maxPage","Math","ceil","page","toFixed","target","value"],"sources":["C:/Users/gueren sanford/Desktop/reviewz/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n/*\r\n    HOME\r\n    Description: User must insert a valid link. If they do, then it sends request to flask to start creating all the necessary files\r\n*/\r\n\r\nexport default function Home() {\r\n    const navigate = useNavigate();\r\n    const [content, setContent] = useState(\"\")\r\n\r\n    const handleClick = event => {\r\n\r\n        const urlpath = String(content);\r\n\r\n        // Request from flask to remove the old files\r\n        axios(\"/remove\").catch(error => {\r\n            console.error(\"Error removing: \", error);\r\n        })\r\n\r\n        // placed here to discourage user from spamming the submit button as that would crash the program\r\n        navigate('/analyzer')\r\n\r\n        // Sends the request to flask to start creating the files and if an error occurs it is displayed then brings the user back to the home screen\r\n        fetch(\"/url\", {\r\n          method: \"POST\",\r\n          headers: {\"Content-Type\": \"application/json\"},\r\n          body: JSON.stringify({url: urlpath}), //http request ?url=urlpath\r\n        }).then(response =>  response.json()).then(data => {\r\n            if(data[\"message\"] !== \"Collecting data from the US sites.\")\r\n            {\r\n                alert(data[\"message\"])\r\n                navigate('/')\r\n            }\r\n            else\r\n            {\r\n                document.getElementById(\"image-prep\").innerText = data[\"message\"]\r\n                fetch(\"/number-of-reviews\").then(response => response.json()).then(data =>\r\n                {\r\n                    if(data[\"message\"] === \"Failed to collect the total number of reviews. Please try again.\")\r\n                    {\r\n                        document.getElementById(\"image-prep\").innerText = data[\"message\"]\r\n                    }\r\n                    else\r\n                    {\r\n                        const maxPage = Math.ceil((data[\"message\"]/10.0))\r\n                        alert(maxPage)\r\n                        for(let page = 1; page <= 2 + 2; page++)\r\n                        {\r\n                            if(page < 2)\r\n                            {\r\n                            fetch(\"/scraper\", {\r\n                                method: \"POST\",\r\n                                headers: {\"Content-Type\": \"application/json\"},\r\n                                body: JSON.stringify({\"page\": page}), //http request ?page=(int)page\r\n                              }).then(response => response.json()).then(data => {\r\n                                document.getElementById(\"image-prep\").innerText = \"Collecting the reviews, we are about \" + ((page * 100) / maxPage).toFixed(0) + \"% done.\"\r\n                            })\r\n                            }\r\n                        }\r\n                        fetch(\"/tutorial-csv\").then(response => response.json()).then(data =>\r\n                        {\r\n                            document.getElementById(\"image-prep\").innerText = data[\"message\"]\r\n                            fetch(\"/analyzed-csv\").then(response => response.json()).then(data =>\r\n                            {\r\n                                document.getElementById(\"image-prep\").innerText = data[\"message\"]\r\n                            })\r\n                        })\r\n                    }\r\n                })\r\n                // fetch(\"/us-scraping\").then(response => response.json()).then(data =>\r\n                // {\r\n                    // document.getElementById(\"image-prep\").innerText = data[\"message\"]\r\n                    // fetch(\"/au-scraping\").then(response => response.json()).then(data =>\r\n                    // {\r\n                    //     document.getElementById(\"image-prep\").innerText = data[\"message\"]\r\n                    //     fetch(\"/ca-scraping\").then(response => response.json()).then(data =>\r\n                    //     {\r\n                    //         document.getElementById(\"image-prep\").innerText = data[\"message\"]\r\n                    //         fetch(\"/in-scraping\").then(response => response.json()).then(data =>\r\n                    //         {\r\n                    //             document.getElementById(\"image-prep\").innerText = data[\"message\"]\r\n                    //             fetch(\"/uk-scraping\").then(response => response.json()).then(data =>\r\n                    //             {\r\n                //                     document.getElementById(\"image-prep\").innerText = data[\"message\"]\r\n                //                     fetch(\"/tutorial-csv\").then(response => response.json()).then(data =>\r\n                //                     {\r\n                //                         document.getElementById(\"image-prep\").innerText = data[\"message\"]\r\n                //                         fetch(\"/analyzed-csv\").then(response => response.json()).then(data =>\r\n                //                         {\r\n                //                             document.getElementById(\"image-prep\").innerText = data[\"message\"]\r\n                //                         })\r\n                //                     })\r\n                //                 // })\r\n                //             // })\r\n                //         // })\r\n                //     // })\r\n                // })\r\n            }\r\n        });\r\n    };\r\n    \r\n    return (\r\n        <header class=\"App-home\">\r\n            <h1>ReviewZ</h1>\r\n            <p>\r\n                Get real time feedback on how your product is doing.\r\n            </p>\r\n            <label>\r\n                    Paste your Amazon url below:\r\n            </label>\r\n            <div>\r\n                <input \r\n                    type=\"text\" \r\n                    id=\"url_submit\" \r\n                    value = {content}\r\n                    onChange = {event => setContent(event.target.value)} \r\n                    placeHolder = \"Ex. https://www.amazon.com/Remote-Control-Dancing-Imitates-Animals/dp/B0B6GJ7847/ref=puwl_atf_sccl_1/131-6402069-2006342?pd_rd_w=6XAAv&content-id=amzn1.sym.b8d6fc5b-13fe-440c-8384-29c241919e84&pf_rd_p=b8d6fc5b-13fe-440c-8384-29c241919e84&pf_rd_r=R1HV2HZZKCWCSDP7YDAM&pd_rd_wg=DEZoo&pd_rd_r=c63334db-32ed-4f7e-9a4c-705d0c5c66e6&pd_rd_i=B0B6GJ7847&th=1\"\r\n                />\r\n                <button id=\"search-btn\" onClick={handleClick}><span class=\"iconify-magnify\" /></button>\r\n            </div>\r\n        </header>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}